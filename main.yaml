---
- name: stratio eos
  hosts: localhost
  gather_facts: False

  vars:

    ansible_python_interpreter: '{{ ansible_playbook_python }}'
    image_name: hello-go
    image_tag: 1.0
    max: 0

  pre_tasks:

    - name: check the status of minikube.
      command: minikube status
      register: minikube_status
      changed_when: false
      ignore_errors: true

    - name: start minikube if it's not running.
      command: minikube start --vm = true
      when: "not minikube_status.stdout or 'Running' not in minikube_status.stdout"

    - name: get existing image hash.
      shell: |
        eval $(minikube docker-env)
        docker images -q {{ image_name }}
      register: image_hash
      changed_when: false

    - name: build image if it's not already built. 
      shell: | 
        eval $(minikube docker-env)
        docker build -t {{ image_name }}:{{ image_tag }} .
      when: not image_hash.stdout

  tasks:
    - name: Create k8 and deployment
      with_items:
        - "1"
        - "2"
        - "3"
        - "4"
        - "5"
      include_role:
        name: k8

  post_tasks:

    - name: exposing Hello Go on the host via Minikube.
      command: minikube service hello-go --url
      changed_when: false
      register: minikube_service

    - debug:
        msg: "Hello Go URL: {{ minikube_service['stdout_lines'][0] }}"

    - name: verify Hello Go is responding.
      uri:
        url: "{{ minikube_service['stdout_lines'][0] }}/test"
        return_content: true
      register: hello_go_response
      failed_when: "'/test' not in hello_go_response.content"

    - debug:
        msg: "Testing URL Hello GO Requested: {{hello_go_response.content}} Status: {{hello_go_response.status}}"